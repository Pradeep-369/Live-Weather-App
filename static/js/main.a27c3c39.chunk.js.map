{"version":3,"sources":["weatherInfos.js","App.js","reportWebVitals.js","index.js"],"names":["defaults","WeatherInfos","props","weatherIcon","weatherName","Fragment","className","icon","color","size","animate","humidity","visibility","wind","feelsLike","maxTemp","App","state","latitude","longitude","temp","locationName","country","visible","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","a","fetch","api","json","data","console","log","setState","main","name","sys","speed","temp_max","feels_like","weather","this","then","position","coords","format","ticking","date","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a27c3c39.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\nconst defaults = {\r\n  icon: \"CLEAR_DAY\",\r\n  color: \"white\",\r\n  size: 100,\r\n  animate: true,\r\n};\r\nfunction WeatherInfos(props) {\r\n  var weatherIcon = null;\r\n  switch (props.weatherName) {\r\n    case \"Haze\":\r\n      weatherIcon = \"CLOUDY\";\r\n      break;\r\n    case \"Rain\":\r\n      weatherIcon = \"RAIN\";\r\n      break;\r\n    case \"RAIN\":\r\n      weatherIcon = \"CLOUDY\";\r\n      break;\r\n    case \"Clouds\":\r\n      weatherIcon = \"CLOUDY\";\r\n      break;\r\n    default:\r\n      weatherIcon = \"CLEAR_DAY\";\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-4 side-bg py-3\">\r\n        <h2 className=\"card-title text-center my-2\">\r\n          {\" \"}\r\n          <ReactAnimatedWeather\r\n            icon={weatherIcon}\r\n            color={defaults.color}\r\n            size={defaults.size}\r\n            animate={defaults.animate}\r\n          />\r\n        </h2>\r\n        <h2 className=\"text-white p-3 text-center\">{props.weatherName}</h2>\r\n        <div className=\"d-flex px-4 py-3 flex-wrap gap-2\">\r\n          <div className=\"d-flex col-12 justify-content-between\">\r\n            <div className=\"text-white \">\r\n              <h5>Humidity</h5>\r\n            </div>\r\n            <div className=\"text-white \">\r\n              {\" \"}\r\n              <h6>{props.humidity}%</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex col-12 justify-content-between\">\r\n            <div className=\"text-white \">\r\n              <h5>Visibility</h5>\r\n            </div>\r\n            <div className=\"text-white \">\r\n              {\" \"}\r\n              <h6>{props.visibility}mi</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex col-12 justify-content-between\">\r\n            <div className=\"text-white \">\r\n              <h5>Wind Speed </h5>\r\n            </div>\r\n            <div className=\"text-white \">\r\n              {\" \"}\r\n              <h6>{props.wind}Km/h</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex col-12 justify-content-between\">\r\n            <div className=\"text-white \">\r\n              <h5>Feels Like</h5>\r\n            </div>\r\n            <div className=\"text-white \">\r\n              {\" \"}\r\n              <h6>{props.feelsLike}°C</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex col-12 justify-content-between\">\r\n            <div className=\"text-white \">\r\n              <h5>Max Temp</h5>\r\n            </div>\r\n            <div className=\"text-white \">\r\n              {\" \"}\r\n              <h6>{props.maxTemp} °C</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WeatherInfos;\r\n","import React, { Component } from \"react\";\n\n// import reactDom from \"react-dom\";\nimport WeatherInfos from \"./weatherInfos\";\nimport Clock from \"react-live-clock\";\n\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    temp: null,\n    locationName: null,\n    country: null,\n    humidity: null,\n    visibility: null,\n    wind: null,\n    maxTemp: null,\n    feelsLike: null,\n    weatherName: null,\n    visible: false,\n  };\n  componentDidMount() {\n    this.getPosition().then((position) => {\n      console.log(position.coords.latitude);\n      this.setState({ latitude: position.coords.latitude });\n      this.getWeather(position.coords.latitude, position.coords.longitude);\n    });\n  }\n\n  getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n  getWeather = async (latitude, longitude) => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=9c7c83cb9a1f60d178bd6ec2378a1f80&units=metric`\n    );\n    const data = await api.json();\n    console.log(data);\n    this.setState({\n      temp: data.main.temp,\n      locationName: data.name,\n      country: data.sys.country,\n      humidity: data.main.humidity,\n      visibility: data.visibility,\n      wind: data.wind.speed,\n      maxTemp: data.main.temp_max,\n      feelsLike: data.main.feels_like,\n      weatherName: data.weather[0].main,\n      visible: true,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"col-8 d-flex justify-content-center py-5 margin-auto \">\n          <div className=\"col-6 weather-background  d-flex flex-wrap py-3 p-3\">\n            <div className=\"col-12\">\n              <h2 className=\"text-white m-0\">\n                {\" \"}\n                {this.state.visible ? this.state.locationName : \"Loading....\"}\n              </h2>\n              <p className=\"text-white\">\n                {\" \"}\n                {this.state.visible ? this.state.country : \"Loading\"}\n              </p>\n            </div>\n            <div className=\"col-12 mt-auto d-flex justify-content-between\">\n              <div className=\"my-auto \">\n                <h2 className=\"text-white m-0 \">\n                  <Clock format={\"HH:mm:ss\"} ticking={true} />\n                </h2>\n                <p className=\"text-white m-0\">\n                  {\" \"}\n                  <Clock date={\"\"} format={\"dddd, MMMM DD, YYYY\"} />\n                </p>\n              </div>\n              <div className=\"ml-auto\">\n                <h1 className=\"text-white\">\n                  {this.state.visible ? this.state.temp : \"Loading\"}°C\n                </h1>\n              </div>\n            </div>\n          </div>\n          <WeatherInfos\n            humidity={this.state.humidity}\n            visibility={this.state.visibility}\n            wind={this.state.wind}\n            feelsLike={this.state.feelsLike}\n            maxTemp={this.state.maxTemp}\n            weatherName={this.state.weatherName}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}